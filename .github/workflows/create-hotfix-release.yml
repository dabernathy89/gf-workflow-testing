name: Create Hotfix Release

on:
  push:
    branches:
      - 'hotfix/v**'

jobs:
  version-and-tag:
    name: Version and Tag
    runs-on: ubuntu-latest
    environment: Release
    outputs:
      version: ${{ steps.semrel.outputs.version }}
      tag_name: ${{ steps.semrel.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # By using the GITHUB_TOKEN, this workflow won't be triggered by itself
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Run semantic-release
        id: semrel
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}
        run: |
          echo "üè∑Ô∏è Running semantic-release (version, changelog, and tagging)"
          npx semantic-release --debug

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: version-and-tag
    if: needs.version-and-tag.outputs.version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.REPO_PAT }}
        run: |
          TAG_NAME="v${{ needs.version-and-tag.outputs.version }}"

          echo "üöÄ Creating GitHub release for hotfix tag $TAG_NAME"

          # Check if release already exists
          if gh release view "$TAG_NAME" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Release $TAG_NAME already exists, skipping release creation"
            exit 0
          fi

          # Check if tag exists
          if ! git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "‚ùå Tag $TAG_NAME does not exist. Make sure the version-and-tag job has run successfully."
            exit 1
          fi

          # Create release with auto-generated notes
          gh release create "$TAG_NAME" \
            --title "Hotfix Release $TAG_NAME" \
            --generate-notes \
            --latest
          echo "‚úÖ GitHub hotfix release $TAG_NAME created successfully"