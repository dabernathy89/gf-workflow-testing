name: Create Release or Hotfix

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of branch to create'
        required: true
        type: choice
        options:
          - release
          - hotfix
      commit_hash:
        description: 'Commit hash to create release from (required for release)'
        required: false
        type: string
      tag:
        description: 'Tag to create hotfix from (required for hotfix, e.g. v1.2.0)'
        required: false
        type: string

jobs:
  create-branch:
    permissions:
      contents: write
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs
        run: |
          if [ "${{ inputs.type }}" = "release" ] && [ -z "${{ inputs.commit_hash }}" ]; then
            echo "‚ùå Commit hash is required for release type"
            exit 1
          fi

          if [ "${{ inputs.type }}" = "hotfix" ] && [ -z "${{ inputs.tag }}" ]; then
            echo "‚ùå Tag is required for hotfix type"
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.REPO_PAT }}

      - name: Checkout target commit (release only)
        if: inputs.type == 'release'
        run: git checkout ${{ inputs.commit_hash }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate branch name (release only)
        if: inputs.type == 'release'
        id: branch_info
        run: |
          # Generate branch name with current date and short commit hash
          CURRENT_DATE=$(date +%Y-%m-%d)
          SHORT_SHA=$(git rev-parse --short HEAD)
          BRANCH_NAME="release/v${CURRENT_DATE}-${SHORT_SHA}"

          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "üìù Generated branch name: $BRANCH_NAME"

      - name: Parse version from tag (hotfix only)
        if: inputs.type == 'hotfix'
        id: parse_version
        run: |
          TAG="${{ inputs.tag }}"
          CURRENT_DATE=$(date +%Y-%m-%d)
          BRANCH_NAME="hotfix/v${CURRENT_DATE}-${TAG}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "üìù Generated branch name: $BRANCH_NAME"

      - name: Check if branch already exists (release only)
        if: inputs.type == 'release'
        run: |
          if git ls-remote --heads origin ${{ steps.branch_info.outputs.branch_name }} | grep -q refs; then
            echo "‚ùå Branch ${{ steps.branch_info.outputs.branch_name }} already exists"
            exit 1
          fi
          echo "‚úÖ Branch ${{ steps.branch_info.outputs.branch_name }} is available"

      - name: Create release branch
        if: inputs.type == 'release'
        run: |
          git checkout main
          git checkout -b ${{ steps.branch_info.outputs.branch_name }}
          git push origin ${{ steps.branch_info.outputs.branch_name }}

      - name: Create hotfix branch
        if: inputs.type == 'hotfix'
        run: |
          git checkout -b ${{ steps.parse_version.outputs.branch_name }} ${{ inputs.tag }}
          git push origin ${{ steps.parse_version.outputs.branch_name }}

      - name: Output branch details
        run: |
          if [ "${{ inputs.type }}" = "release" ]; then
            BRANCH_NAME="${{ steps.branch_info.outputs.branch_name }}"
            echo "‚úÖ Release branch created: $BRANCH_NAME"
            echo "üìù Created from commit: ${{ inputs.commit_hash }}"
          else
            BRANCH_NAME="${{ steps.parse_version.outputs.branch_name }}"
            echo "‚úÖ Hotfix branch created: $BRANCH_NAME"
            echo "üìù Created from tag: ${{ inputs.tag }}"
          fi

          echo ""
          echo "ÔøΩ Next steps:"
          echo "1. Push commits to the branch will trigger release-versioning.yml"
          echo "2. Semantic-release will run and create version/tag"
          echo "3. If successful, a PR will be created automatically"
          echo "4. Review and merge the PR to complete the release"
