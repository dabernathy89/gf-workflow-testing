name: Create Hotfix Pull Request

on:
  push:
    branches:
      - 'hotfix/v**'

jobs:
  version-and-tag:
    name: Version and Tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.hotfix_version.outputs.version }}
      tag_name: ${{ steps.hotfix_version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # By using the GITHUB_TOKEN, this workflow won't be triggered by itself
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false

      - name: Extract hotfix version from branch name
        id: hotfix_version
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          # Extract version from branch name (e.g., hotfix/v2.2.1 -> 2.2.1)
          VERSION=$(echo "$BRANCH_NAME" | sed 's/hotfix\/v//')

          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            TAG_NAME="v${VERSION}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "üî• Hotfix version extracted: $VERSION"
            echo "üè∑Ô∏è Hotfix tag to be created: $TAG_NAME"
          else
            echo "‚ùå Invalid version format in branch name: $BRANCH_NAME"
            echo "Expected format: hotfix/vX.X.X"
            exit 1
          fi

  create-pull-request:
    name: Create Pull Request
    runs-on: ubuntu-latest
    needs: version-and-tag
    if: needs.version-and-tag.outputs.version
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.REPO_PAT }}

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.REPO_PAT }}
        run: |
          CURRENT_BRANCH="${{ github.ref_name }}"
          VERSION="${{ needs.version-and-tag.outputs.version }}"
          TAG_NAME="${{ needs.version-and-tag.outputs.tag_name }}"

          PR_TITLE="Hotfix $TAG_NAME"
          PR_BODY=$(cat << EOF
          üî• Hotfix $TAG_NAME

          This PR contains the hotfix branch for version $VERSION.

          ## Changes
          - Hotfix for critical issue
          - Version will be $VERSION once released

          ## üåê GitHub Release Creation Required
          **IMPORTANT:** Before merging this PR, create a GitHub release:

          1. **Go to**: [Create New Release](https://github.com/${{ github.repository }}/releases/new)
          2. **Tag**: \`$TAG_NAME\` (create new tag)
          3. **Target**: \`$CURRENT_BRANCH\` (select this branch)
          4. **Title**: \`Hotfix $TAG_NAME\`
          5. **Description**: Use auto-generated release notes
          6. **Click**: "Publish release"

          ## ‚ö†Ô∏è Important Merge Instructions
          1. **First**: Create the GitHub release as described above
          2. **Then**: Use only "Create a merge commit" (DO NOT use "Squash and merge" or "Rebase and merge") to preserve the git tag on the correct commit for production deployment

          ## Post-Merge Actions
          The release will already be created from step 1 above.

          Urgent hotfix - ready for review and merge to main.
          EOF
          )

          # Check if PR already exists
          if gh pr view "$CURRENT_BRANCH" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è PR for branch $CURRENT_BRANCH already exists"
            gh pr view "$CURRENT_BRANCH"
          else
            # Create the PR
            gh pr create \
              --title "$PR_TITLE" \
              --body "$PR_BODY" \
              --base main \
              --head "$CURRENT_BRANCH"

            echo "‚úÖ Pull request created: $PR_TITLE"
          fi